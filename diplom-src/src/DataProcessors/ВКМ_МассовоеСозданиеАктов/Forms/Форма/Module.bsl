
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПериодПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОчиститьСообщения();
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда) 
	
	ОчиститьСообщения();
	ЗаполнитьНаСервере();
	
	ДоговораДляСоздания = ПолучитьМассивСтрок();
	
	Если ДоговораДляСоздания.Количество() > 0 Тогда
		ДлительнаяОперация = ВыполнитьТяжелуюОперациюНаСервере(ДоговораДляСоздания);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		
		ФункцияВыполнена = Новый ОписаниеОповещения ("ФункцияВыполнена",ЭтотОбъект);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ФункцияВыполнена, ПараметрыОжидания); 
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Реализации для договоров в этом периоде созданы");
	КонецЕсли;
	
 КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере() 
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.Ссылка КАК Договор,
	               |	&ПериодНачало КАК ДатаНачало,
	               |	&ПериодОкончания КАК ДатаКонец
	               |ПОМЕСТИТЬ ВТ_Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбаненскоеОбслуживание)
	               |	И ДоговорыКонтрагентов.ВКМ_ДатаНачала < &ПериодОкончания
	               |	И ДоговорыКонтрагентов.ВКМ_ДатаОкончания > &ПериодНачало
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Договоры.Договор КАК Договор,
	               |	РеализацияТоваровУслуг.Ссылка КАК РеализацияТоваровУслуг
	               |ИЗ
	               |	ВТ_Договоры КАК ВТ_Договоры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ПО ВТ_Договоры.Договор.Ссылка = РеализацияТоваровУслуг.Договор
	               |			И ВТ_Договоры.ДатаНачало <= РеализацияТоваровУслуг.Дата
	               |			И ВТ_Договоры.ДатаКонец >= РеализацияТоваровУслуг.Дата";
	
	Запрос.УстановитьПараметр("ПериодНачало",Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ПериодОкончания",Объект.Период.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Объект.ДоговораИРеализации.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаТЧ = Объект.ДоговораИРеализации.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьТяжелуюОперациюНаСервере(ДоговораСписок)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
		"Обработки.ВКМ_МассовоеСозданиеАктов.СозданиеДокумента", ДоговораСписок, Объект.Период);
	      
	Возврат ДлительнаяОперация; 
	
КонецФункции

&НаСервере
Функция ПолучитьМассивСтрок()
	
	ЗначенияТаблицы = Объект.ДоговораИРеализации.Выгрузить();
	
	ДоговораДляСоздания = Новый Массив;
	
	Для Каждого Строка Из ЗначенияТаблицы Цикл
		
		Если Строка.РеализацияТоваровУслуг.Пустая() Тогда
			ДоговораДляСоздания.Добавить(Строка.Договор);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДоговораДляСоздания; 
	
КонецФункции

&НаКлиенте
Процедура ФункцияВыполнена(Результат, ДополнительныеПараметры)Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	ЗначениеФункции = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	ОбщегоНазначенияКлиент.СообщитьПользователю(ЗначениеФункции);
	
КонецПроцедуры

#КонецОбласти
