#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий	
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Начисления.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Не заполнена табличная часть документа",,"Начисления","Объект.Начисления");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СформироватьДвижения(); 
	
	РазмерНДФЛ = Константы.ВКМ_РазмерНДФЛ.Получить(); 
	Если Не ЗначениеЗаполнено(РазмерНДФЛ) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не установлен размер НДФЛ. Расчет удержаний не будет выполнен");
		Отказ = Истина;
		Возврат;
	КонецЕсли;      
	
	ОкладРасчитан = РасчитатьОсновныеНачисленияОклад(РазмерНДФЛ);
	Если Не ОкладРасчитан Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РасчитатьОсновныеНачисленияОтпуск(РазмерНДФЛ);
	
	СформиоватьВзаиморасчетыССотрудниками();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура СформироватьДвижения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	               |	ВКМ_НачисленияЗарплатыНачисления.Подразделение КАК Подразделение,
	               |	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания
	               |ПОМЕСТИТЬ ВТ_ДанныеДокумента
	               |ИЗ
	               |	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	               |ГДЕ
	               |	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	               |	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	               |	ВТ_ДанныеДокумента.Подразделение КАК Подразделение,
	               |	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
	               |	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
	               |	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Показатель
	               |ИЗ
	               |	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&ДатаНачало,
	               |				Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	               |	ВКМ_НачисленияЗарплатыНачисления.Подразделение,
	               |	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
	               |	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания,
	               |	NULL
	               |ИЗ
	               |	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	               |ГДЕ
	               |	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	               |	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск))";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаНачало",НачалоМесяца(Дата)); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка); 
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ПериодДействияНачало,-12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ПериодДействияКонец,-1));
			//@skip-check object-not-accessible-concrete-compatiblity-mode
			Движение.ОтработаноДней = (Движение.ПериодДействияКонец - Движение.ПериодДействияНачало) / 86400 + 1;
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();

КонецПроцедуры

Функция РасчитатьОсновныеНачисленияОклад(РазмерНДФЛ)
	
	ОкладРасчитан = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	               |	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОстатки.СуммаКОплатеОстаток, 0) КАК СуммаКОплате
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Остатки(&ДатаДокумента, ) КАК ВКМ_ВыполненныеСотрудникомРаботыОстатки
	               |		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОстатки.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.План = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Не заполнен график работ, в обработке Заполнение графика");
			ОкладРасчитан = Ложь;
			Возврат ОкладРасчитан;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		ДвижениеНДФЛ = Движения.ВКМ_Удержание.Добавить();
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержание.НДФЛ;
		ДвижениеНДФЛ.Основание = Движение.ВидРасчета;
		ЗаполнитьЗначенияСвойств(ДвижениеНДФЛ,Движение,,"ВидРасчета");
		
		Если Движение.Подразделение <> Справочники.ВКМ_Подразделения.ОтделВнедрения Тогда 
			Движение.Результат = Движение.Показатель * Выборка.Факт / Выборка.План;
			Движение.ОтработаноДней = Выборка.Факт; 
			ДвижениеНДФЛ.Результат = Движение.Результат * РазмерНДФЛ / 100;
			ДвижениеНДФЛ.СуммаОснования = Движение.Результат; 
		КонецЕсли;
		Если Движение.Подразделение = Справочники.ВКМ_Подразделения.ОтделВнедрения Тогда 
			Движение.Результат = (Движение.Показатель * Выборка.Факт / Выборка.План) + Выборка.СуммаКОплате;
			Движение.ОтработаноДней = Выборка.Факт; 
			ДвижениеНДФЛ.Результат = Движение.Результат * РазмерНДФЛ / 100;
			ДвижениеНДФЛ.СуммаОснования = Движение.Результат; 
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	Движения.ВКМ_Удержание.Записать(); 
	
	Возврат ОкладРасчитан;

КонецФункции

Процедура РасчитатьОсновныеНачисленияОтпуск(РазмерНДФЛ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаОтработано,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |				&Измерение,
	               |				&Измерение,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	               |				&Измерение,
	               |				&Измерение,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |	И ВКМ_ОсновныеНачисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск))";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	//Измерение.Добавить("Подразделение");
	Запрос.УстановитьПараметр("Измерение", Измерение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.БазаОтработано = 0 Тогда
			Движение.Результат = 0;
			Продолжить;
		КонецЕсли;
		
		ДвижениеНДФЛ = Движения.ВКМ_Удержание.Добавить();
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержание.НДФЛ;
		ДвижениеНДФЛ.Основание = Движение.ВидРасчета;
		ЗаполнитьЗначенияСвойств(ДвижениеНДФЛ,Движение,,"ВидРасчета");
		
		Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп) / Выборка.БазаОтработано * Движение.ОтработаноДней;
		ДвижениеНДФЛ.Результат = Движение.Результат * РазмерНДФЛ / 100;
		ДвижениеНДФЛ.СуммаОснования = Движение.Результат; 
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	Движения.ВКМ_Удержание.Записать();

КонецПроцедуры

Процедура СформиоватьВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат,
	               |	ВКМ_ОсновныеНачисления.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисления.Сотрудник,
	               |	ВКМ_ОсновныеНачисления.Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК Результат,
	               |	ВКМ_ДополнительныеНачисления.Регистратор КАК РегистраторДоп
	               |ПОМЕСТИТЬ ВТ_ДопНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ДополнительныеНачисления.Сотрудник,
	               |	ВКМ_ДополнительныеНачисления.Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_Удержание.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_Удержание.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_Удержания
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержание КАК ВКМ_Удержание
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
	               |		ПО ВКМ_Удержание.Регистратор = ВТ_ДопНачисления.РегистраторДоп
	               |			И ВКМ_Удержание.Сотрудник = ВТ_ДопНачисления.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	               |		ПО ВКМ_Удержание.Регистратор = ВТ_ОсновныеНачисления.Регистратор
	               |			И ВКМ_Удержание.Сотрудник = ВТ_ОсновныеНачисления.Сотрудник
	               |ГДЕ
	               |	(ВКМ_Удержание.Регистратор = ВТ_ОсновныеНачисления.Регистратор
	               |			ИЛИ ВКМ_Удержание.Регистратор = ВТ_ДопНачисления.РегистраторДоп)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_Удержание.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	ВТ_ОсновныеНачисления.Результат + ЕСТЬNULL(ВТ_ДопНачисления.Результат, 0) - ВТ_Удержания.Результат КАК Сумма
	               |ИЗ
	               |	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
	               |		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДопНачисления.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	               |		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_Удержания.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка); 
		
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти
#КонецЕсли
